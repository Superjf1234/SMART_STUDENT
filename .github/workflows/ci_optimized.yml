name: CI Tests Optimized

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.10.17, 3.11, 3.12]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Configure CI environment
      run: |
        echo "CI=true" >> $GITHUB_ENV
        echo "GITHUB_ACTIONS=true" >> $GITHUB_ENV
        echo "REFLEX_ENV=dev" >> $GITHUB_ENV
        echo "NODE_ENV=development" >> $GITHUB_ENV
        echo "NODE_OPTIONS=--max-old-space-size=512" >> $GITHUB_ENV
        echo "GEMINI_API_KEY=test_key_for_ci" >> $GITHUB_ENV
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-timeout pytest-mock
    
    - name: Run CI-optimized tests
      run: |
        # Ejecutar solo tests que funcionan bien en CI
        pytest test_ci_optimized.py -v --tb=short
        
        # Ejecutar tests básicos excluyendo los problemáticos
        pytest tests/ -v --tb=short -m "not slow"
        
        # Ejecutar tests de configuración
        pytest test_utils_import.py test_correct_markers.py test_bilingual_parsing.py -v
    
    - name: Run Railway simulation (basic)
      run: |
        # Solo test de importaciones de Railway, no ejecución
        python -c "
        import os
        os.environ['REFLEX_ENV'] = 'dev'
        os.environ['NODE_ENV'] = 'development'
        
        # Test básico de importación
        try:
            import mi_app_estudio
            from mi_app_estudio import mi_app_estudio
            print('✅ Railway imports OK')
        except Exception as e:
            print(f'❌ Railway imports failed: {e}')
            exit(1)
        "
    
    - name: Verify scripts exist
      run: |
        # Verificar que los scripts de solución existen
        ls -la railway_memory_fix.py final_port_fix.py clean_port.py
        echo "✅ All solution scripts present"
